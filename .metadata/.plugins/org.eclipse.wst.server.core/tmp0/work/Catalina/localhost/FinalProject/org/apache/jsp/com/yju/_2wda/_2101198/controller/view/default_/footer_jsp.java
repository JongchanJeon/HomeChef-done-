/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-12-06 14:54:57 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.com.yju._2wda._2101198.controller.view.default_;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class footer_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("/*푸터입니당*/\r\n");
      out.write("    .footer {\r\n");
      out.write("        background: #fff; width: 100%; position: static; bottom : 0;\r\n");
      out.write("    }\r\n");
      out.write("    .area_link {\r\n");
      out.write("        border-bottom:1px solid #eee; border-top:1px solid #e6e6e6;\r\n");
      out.write("    }\r\n");
      out.write("    .area_link .link_wrap ul {\r\n");
      out.write("        width: 1200px; margin: 0 auto; display: inline-block; float: left;\r\n");
      out.write("    }\r\n");
      out.write("    .area_link .link_wrap ul li {\r\n");
      out.write("        display: inline-block; vertical-align: middle; border-left: 1px solid #c3c3c3; margin: 0 0px 0 -1px;\r\n");
      out.write("    }\r\n");
      out.write("    .area_link .link_wrap ul li:first-child {\r\n");
      out.write("        border-left:0;\r\n");
      out.write("    }\r\n");
      out.write("    .area_link .link_wrap ul li:nth-child(2) {\r\n");
      out.write("        border-left:0;\r\n");
      out.write("    }\r\n");
      out.write("    .area_link .link_wrap ul li a {\r\n");
      out.write("        display:block; font-size:10pt; padding:0 5px; letter-spacing: -1px;\r\n");
      out.write("    }\r\n");
      out.write("    .area_link .link_wrap ul li a:hover {\r\n");
      out.write("        text-decoration:underline\r\n");
      out.write("    }\r\n");
      out.write("    .area_txt {\r\n");
      out.write("\r\n");
      out.write("    }\r\n");
      out.write("    .area_info {\r\n");
      out.write("        text-align: center; padding: 20px 0px; font-size: 12px; color: #888; line-height: 19px; letter-spacing: -1px;\r\n");
      out.write("    }\r\n");
      out.write("    .link_wrap {\r\n");
      out.write("        width: 1100px; margin: 0 auto; padding: 11px 0px; text-align: center; display: table;\r\n");
      out.write("    }\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("     <div class=\"footer\"  style=\"display:;\">\r\n");
      out.write("        <div class=\"area_link\">\r\n");
      out.write("            <div class=\"link_wrap\">\r\n");
      out.write("                <ul>\r\n");
      out.write("                    \r\n");
      out.write("                    <li><a href=\"#\">인스타그램</a></li>\r\n");
      out.write("                    <li><a href=\"#\">깃허브</a></li>\r\n");
      out.write("                    <li><a href=\"#\">이용안내</a></li>\r\n");
      out.write("                    <li><a href=\"#\">개인정보취급방침</a></li>\r\n");
      out.write("                    <li><a href=\"#\">모바일버전보기(BETA)</a></li>\r\n");
      out.write("                 </ul>\r\n");
      out.write("             </div>\r\n");
      out.write("         </div>\r\n");
      out.write("         <div class=\"area_info\">\r\n");
      out.write("본 사이트에 표시된 데이터는 항상 실시간 업데이트되거나 정확한 것은 아니라는 것을 알려드립니다. <br>\r\n");
      out.write("모든 상품은 사용자가 업로드 하는 것으로 사용자와 문의하세요. <br>\r\n");
      out.write("또한 HomeChef가 제공하는 서비스는 C2C형식의 서비스이므로 암거래를 목적으로 사용은 일체 금지입니다.<br />\r\n");
      out.write("따라서 당사는 이 결과로 발생한 손실에 대해서는 책임지지 않습니다.<br />\r\n");
      out.write("<br />\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("문의: tristan6349@g.yju.ac.kr 전화: 010-3376-4433 <br />\r\n");
      out.write("Copyrightⓒ 2wda_2101198_전종찬, All Right Reserved.\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
