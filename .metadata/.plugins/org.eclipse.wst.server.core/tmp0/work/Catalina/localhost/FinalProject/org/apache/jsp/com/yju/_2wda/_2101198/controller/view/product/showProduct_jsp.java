/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.62
 * Generated at: 2022-12-19 15:17:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.com.yju._2wda._2101198.controller.view.product;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import java.util.ArrayList;
import FinalProject.model.productDTO;
import javax.servlet.http.*;

public final class showProduct_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/com/yju/2wda/2101198/controller/view/product/../default/header.jsp", Long.valueOf(1671462994380L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("FinalProject.model.productDTO");
    _jspx_imports_classes.add("java.util.ArrayList");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\r\n");
      out.write("<title>Home Chef(홈 셰프)</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/css/bootstrap.min.css\" rel=\"stylesheet\" integrity=\"sha384-Zenh87qX5JnK2Jl0vWa8Ck2rdkQ2Bzep5IDxbcnCeuOxjzrPF/et3URy9Bv1WTRi\" crossorigin=\"anonymous\">\r\n");
      out.write("<title>Home Chef(홈 셰프)</title>\r\n");
      out.write("<style>\r\n");
      out.write("	img {\r\n");
      out.write("		float:left;\r\n");
      out.write("	}\r\n");
      out.write("	#search {\r\n");
      out.write("		width : 700px;\r\n");
      out.write("		padding : 20px;\r\n");
      out.write("	}\r\n");
      out.write("	#searchbtn {\r\n");
      out.write("		width : 100px;\r\n");
      out.write("	}\r\n");
      out.write("	#navbar {\r\n");
      out.write("		width : 500px;\r\n");
      out.write("	}\r\n");
      out.write("	#center {\r\n");
      out.write("		width : 900px;\r\n");
      out.write("		margin : 0 auto;\r\n");
      out.write("  		text-align : center;\r\n");
      out.write("	}\r\n");
      out.write("	#login {\r\n");
      out.write("		float:right; \r\n");
      out.write("		padding-top: 50px;\r\n");
      out.write("        padding-right: 300px;\r\n");
      out.write("        padding-bottom: 30px;\r\n");
      out.write("\r\n");
      out.write("	}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<!-- 로그인 회원가입 페이지 -->\r\n");

	String loginstate = (String) session.getAttribute("login_now");
	String loginUserId = (String) session.getAttribute("login_id");
	String loginType = (String) session.getAttribute("login_type");
	if (loginstate == "true") {

      out.write("\r\n");
      out.write("<div id =\"login\" class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n");
      out.write("	");
      out.print( loginUserId );
      out.write("님 안녕하세요 ^_^\r\n");
      out.write("	");
if (loginType.equals("admin")){ 
      out.write("\r\n");
      out.write("	!!!현재 관리자 모드입니다!!!\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-danger\" onclick=\"location='./userManagement.be'\">회원수정</button>\r\n");
      out.write("	");
} 
      out.write("\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"nono()\">구매목록</button>\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"location='./showCart.be'\">장바구니</button>\r\n");
      out.write("  <button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"location='/FinalProject/com/yju/2wda/2101198/controller/view/user/myPage.jsp'\">마이페이지</button>\r\n");
      out.write("  <button type=\"submit\" class=\"btn btn-outline-primary\" onclick=\"location='/FinalProject/com/yju/2wda/2101198/controller/view/default/logoutAction.jsp'\">로그아웃</button>\r\n");
      out.write("\r\n");
      out.write("</div>\r\n");
      out.write("\r\n");

	}else {

      out.write("\r\n");
      out.write("<div id =\"login\" class=\"btn-group\" role=\"group\" aria-label=\"Basic outlined example\">\r\n");
      out.write("	<button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"location='./showCart.be'\">장바구니</button>\r\n");
      out.write("  <button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"location='/FinalProject/com/yju/2wda/2101198/controller/view/user/login.jsp'\">로그인</button>\r\n");
      out.write("  <button type=\"button\" class=\"btn btn-outline-primary\" onclick=\"location='/FinalProject/com/yju/2wda/2101198/controller/view/user/join.jsp'\">회원가입</button>\r\n");
      out.write("</div>\r\n");
 } 
      out.write("\r\n");
      out.write("<br/><br/><br/><br/>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("<!-- 로고, 상품검색, 네비게이션 바-->\r\n");
      out.write("<div id =\"center\">\r\n");
      out.write("<img src=\"/FinalProject/com/yju/2wda/2101198/controller/image/homecheflogo.png\" class=\"img-thumbnail\" onclick=\"location='/FinalProject/index.jsp'\" height=\"150px\" width =\"150px\">\r\n");
      out.write("	<form  class=\"d-flex\" role=\"search\" method =\"post\" action=\"./searchProduct.be\">\r\n");
      out.write("        <input id = \"search\" class=\"form-control me-2\" type=\"search\" placeholder=\"상품 검색 : \" aria-label=\"Search\" name = \"search\" >\r\n");
      out.write("        <button id = \"searchbtn\" class=\"btn btn-outline-success\" type=\"submit\">검색</button>\r\n");
      out.write("    </form><br/>\r\n");
      out.write("\r\n");
      out.write("    <nav class=\"navbar navbar-expand-lg bg-light\">\r\n");
      out.write("  <div class=\"container-fluid\">\r\n");
      out.write("    <a class=\"navbar-brand\" href=\"/FinalProject/index.jsp\">Home Chef</a>\r\n");
      out.write("    <button class=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarText\" aria-controls=\"navbarText\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n");
      out.write("      <span class=\"navbar-toggler-icon\"></span>\r\n");
      out.write("    </button>\r\n");
      out.write("    <div class=\"collapse navbar-collapse\" id=\"navbarText\">\r\n");
      out.write("      <ul class=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link active\" aria-current=\"page\" href=\"/FinalProject/index.jsp\">메인</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("        <!-- showProduct.be로 이름 지어야 함 -->\r\n");
      out.write("          <a class=\"nav-link\" href=\"./showProduct.be\">출장 요리구매</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");
if (loginstate == "true"){ 
      out.write("\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"/FinalProject/com/yju/2wda/2101198/controller/view/product/insertItem.jsp\">상품 추가</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        <li class=\"nav-item\">\r\n");
      out.write("          <a class=\"nav-link\" href=\"./myProducts.be\">내 상품 관리</a>\r\n");
      out.write("        </li>\r\n");
      out.write("        ");
} 
      out.write("\r\n");
      out.write("      </ul>\r\n");
      out.write("      <span class=\"navbar-text\">\r\n");
      out.write("        2101198_WD2A\r\n");
      out.write("      </span>\r\n");
      out.write("    </div>\r\n");
      out.write("  </div>\r\n");
      out.write("</nav>\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("	function nono() {\r\n");
      out.write("		alert(\"활성화 되지 않은 기능입니다.\");\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("<script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\" integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\" crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\r\n");

	String id = request.getParameter("id");

	String login_id = (String) session.getAttribute("login_id");
	ArrayList<productDTO> productsList = (ArrayList<productDTO>) session.getAttribute("Products");
	for(int i = 0 ; i < productsList.size(); i++){
		if(productsList.get(i).getProduct_id().equals(id)){
			
      out.write("\r\n");
      out.write("			<div>\r\n");
      out.write("			<img src=\"/FinalProject/com/yju/2wda/2101198/controller/image/");
      out.print(productsList.get(i).getProduct_filesystemName());
      out.write("\" class=\"card-img-sop\" width=\"285px\" height=\"250px\">\r\n");
      out.write("			<h2>");
      out.print(productsList.get(i).getProduct_name() );
      out.write("</h2>\r\n");
      out.write("          	<p>");
      out.print(productsList.get(i).getProduct_description() );
      out.write("</p>\r\n");
      out.write("          	<p>가격 : ");
      out.print(productsList.get(i).getProduct_price() );
      out.write("원</p>\r\n");
      out.write("         	<button class=\"btn btn-primary\" onclick=\"location='./getCart.be?id=");
      out.print(id);
      out.write("'; addCart()\">장바구니 담기</button>\r\n");
      out.write("         	<!-- 구매하기 버튼 비활성화 되 -->\r\n");
      out.write("         	");
if (session.getAttribute("login_id") != null){ 
      out.write("\r\n");
      out.write("         	<button class=\"btn btn-primary\" onclick=\"location='./payProduct.be?id=");
      out.print(id);
      out.write("'\">구매하기</button>\r\n");
      out.write("         	");
} 
      out.write("\r\n");
      out.write("         	");
if (productsList.get(i).getProduct_user_id().equals(login_id)){ 
      out.write("\r\n");
      out.write("         	<button class=\"btn btn-warning\" onclick=\"location='./getProduct.be?id=");
      out.print(id);
      out.write("'\">상품 수정</button>\r\n");
      out.write("         	<button class=\"btn btn-danger\" onclick=\"location='./productDelete.be?id=");
      out.print(id);
      out.write("'; deleteProduct()\">상품 삭제</button>\r\n");
      out.write("         	");
} 
      out.write("\r\n");
      out.write("			</div>\r\n");
      out.write("		");
break;}
	}

      out.write("\r\n");
      out.write("\r\n");
      out.write("<script>\r\n");
      out.write("	function addCart(){\r\n");
      out.write("		alert(\"장바구니에 상품이 담겼습니다!\");\r\n");
      out.write("	}\r\n");
      out.write("	function deleteProduct () {\r\n");
      out.write("		alert(\"상품을 정상적으로 삭제 하였습니다!\");\r\n");
      out.write("	}\r\n");
      out.write("</script>\r\n");
      out.write("    <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.2.2/dist/js/bootstrap.bundle.min.js\"\r\n");
      out.write("        integrity=\"sha384-OERcA2EqjJCMA+/3y+gxIOqMEjwtxJY7qPCqsdltbNJuaOe923+mo//f6V8Qbsw3\"\r\n");
      out.write("        crossorigin=\"anonymous\"></script>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
